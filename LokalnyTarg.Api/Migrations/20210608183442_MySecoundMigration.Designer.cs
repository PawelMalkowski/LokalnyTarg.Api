// <auto-generated />
using LokalnyTarg.Data.Sql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LokalnyTarg.Api.Migrations
{
    [DbContext(typeof(LokalnyTargDBContext))]
    [Migration("20210608183442_MySecoundMigration")]
    partial class MySecoundMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("LokalnyTarg.Data.Sql.DAO.Address", b =>
                {
                    b.Property<uint>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("Street")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("AddressId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("LokalnyTarg.Data.Sql.DAO.Annoucement", b =>
                {
                    b.Property<uint>("AnnoucementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<uint>("ProductId")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("SuppilerId")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.HasKey("AnnoucementId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SuppilerId");

                    b.ToTable("Annoucement");
                });

            modelBuilder.Entity("LokalnyTarg.Data.Sql.DAO.Category", b =>
                {
                    b.Property<uint>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("LokalnyTarg.Data.Sql.DAO.FavoriteSuppillier", b =>
                {
                    b.Property<uint>("FavoriteSuppillierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<uint>("SuppilierId")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("UserId")
                        .HasColumnType("int unsigned");

                    b.HasKey("FavoriteSuppillierId");

                    b.HasIndex("SuppilierId");

                    b.HasIndex("UserId");

                    b.ToTable("FavoriteSuppillier");
                });

            modelBuilder.Entity("LokalnyTarg.Data.Sql.DAO.Product", b =>
                {
                    b.Property<uint>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<uint>("CategoryId")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<float>("Price")
                        .HasPrecision(12, 2)
                        .HasColumnType("float");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("LokalnyTarg.Data.Sql.DAO.Rate", b =>
                {
                    b.Property<uint>("RateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("RateValue")
                        .HasMaxLength(2)
                        .HasColumnType("int");

                    b.Property<uint>("SupplierId")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("UserId")
                        .HasColumnType("int unsigned");

                    b.HasKey("RateId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Rate");
                });

            modelBuilder.Entity("LokalnyTarg.Data.Sql.DAO.Supplier", b =>
                {
                    b.Property<uint>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<uint>("AddressId")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.HasKey("SupplierId");

                    b.HasIndex("AddressId");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("LokalnyTarg.Data.Sql.DAO.User", b =>
                {
                    b.Property<uint>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<uint>("AddressId")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("EntityId")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.HasIndex("AddressId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("LokalnyTarg.Data.Sql.DAO.Annoucement", b =>
                {
                    b.HasOne("LokalnyTarg.Data.Sql.DAO.Product", "Product")
                        .WithMany("Annoucements")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LokalnyTarg.Data.Sql.DAO.Supplier", "Supplier")
                        .WithMany("Annoucements")
                        .HasForeignKey("SuppilerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("LokalnyTarg.Data.Sql.DAO.FavoriteSuppillier", b =>
                {
                    b.HasOne("LokalnyTarg.Data.Sql.DAO.Supplier", "Suppllier")
                        .WithMany("FavoriteSuppilliers")
                        .HasForeignKey("SuppilierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LokalnyTarg.Data.Sql.DAO.User", "User")
                        .WithMany("FavoriteSuppilliers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Suppllier");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LokalnyTarg.Data.Sql.DAO.Product", b =>
                {
                    b.HasOne("LokalnyTarg.Data.Sql.DAO.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("LokalnyTarg.Data.Sql.DAO.Rate", b =>
                {
                    b.HasOne("LokalnyTarg.Data.Sql.DAO.Supplier", "Supplier")
                        .WithMany("Rates")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("LokalnyTarg.Data.Sql.DAO.Supplier", b =>
                {
                    b.HasOne("LokalnyTarg.Data.Sql.DAO.Address", "Address")
                        .WithMany("Suppliers")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("LokalnyTarg.Data.Sql.DAO.User", b =>
                {
                    b.HasOne("LokalnyTarg.Data.Sql.DAO.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("LokalnyTarg.Data.Sql.DAO.Address", b =>
                {
                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("LokalnyTarg.Data.Sql.DAO.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("LokalnyTarg.Data.Sql.DAO.Product", b =>
                {
                    b.Navigation("Annoucements");
                });

            modelBuilder.Entity("LokalnyTarg.Data.Sql.DAO.Supplier", b =>
                {
                    b.Navigation("Annoucements");

                    b.Navigation("FavoriteSuppilliers");

                    b.Navigation("Rates");
                });

            modelBuilder.Entity("LokalnyTarg.Data.Sql.DAO.User", b =>
                {
                    b.Navigation("FavoriteSuppilliers");
                });
#pragma warning restore 612, 618
        }
    }
}
